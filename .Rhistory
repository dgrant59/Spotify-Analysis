-log(model2$surv)
data
exp(model1$coefficients)/sum(exp(model1$coefficients*death))
exp(model1$coefficients)/sum(exp(model1$coefficients*gender))
1/sum(exp(model1$coefficients*gender))
exp(model1$coefficients*gender)
model1$coefficients
exp(model1$coefficients)/sum(exp(model1$coefficients*gender))
plot(model2$time, -log(model2$surv),type="s")
model2 <- survfit(model1, ties="breslow")
plot(model2$time, -log(model2$surv),type="s")
-log(model2$surv)
model2 <- survfit(model1, ties="aalen")
plot(model2$time, -log(model2$surv),type="s")
model2$surc
model2$surv
-log(model2$surv)
model2 <- survfit(model1,type="aalen")
plot(model2$time, -log(model2$surv),type="s")
-log(model2$surv)
model3<- survfit(model1,type="breslow")
-log(model3$surv)
-log(model3$surv)==-log(model2$surv)
model1 <-coxph(Surv(age,death)~gender)
model1
model3<- survfit(model1,type="breslow")
-log(model3$surv)
model3<- survfit(model1,type="aalen")
-log(model3$surv)
model2<- survfit(model1,type="breslow")
plot(model2$time, -log(model2$surv),type="s")
model2<- survfit(model1,type="breslow", main="Brewlow Estimate for Cumu Base Hazard")
plot(model2$time, -log(model2$surv),type="s", main="Brewlow Estimate for Cumu Base Hazard")
library(survival)
age <- c(60,72,81,72,79,75,68,73,77,65)
death <- c(1,1,0,1,0,1,1,1,0,1)
gender <- c(1,0,0,1,1,0,1,0,0,1)
data <- data.frame(subject=1:10, age = age, death = death, gender =gender)
model1 <-coxph(Surv(age,death)~gender)
model1
names(model1)
model1[1,]
model1$coefficients
model1$var
model1
sqrt(model1$var)
c(exp(model1$coefficients)-qnorm(0.975)*exp(model1$coefficients)*sqrt(model1$var),exp(model1$coefficients)+qnorm(0.975)*exp(model1$coefficients)*sqrt(model1$var))
model1$coef+qnorm(0.975)*model1$var^(0.5)
exp(model1$coef+qnorm(0.975)*model1$var^(0.5))
exp(model1$coef-qnorm(0.975)*model1$var^(0.5))
c(exp(model1$coefficients)-qnorm(0.975)*exp(model1$coefficients)*sqrt(model1$var),exp(model1$coefficients)+qnorm(0.975)*exp(model1$coefficients)*sqrt(model1$var))
summary(model1)
c((model1$coefficients)-qnorm(0.975)*sqrt(model1$var,model1$coefficients)+qnorm(0.975)*exp(model1$coefficients)*sqrt(model1$var))
c((model1$coefficients)-qnorm(0.975)*sqrt(model1$var),model1$coefficients)+qnorm(0.975)*exp(model1$coefficients)*sqrt(model1$var))
c(model1$coefficients-qnorm(0.975)*sqrt(model1$var),model1$coefficients+qnorm(0.975)*sqrt(model1$var))
exp(c(model1$coefficients-qnorm(0.975)*sqrt(model1$var),model1$coefficients+qnorm(0.975)*sqrt(model1$var)))
exp(c(model1$coefficients-qnorm(0.975)*sqrt(model1$var),model1$coefficients+qnorm(0.975)*sqrt(model1$var)))
summary(model1)$conf.int
model2$surv
model2$time
model2<- survfit(model1,type="breslow")
plot(model2$time, -log(model2$surv),type="s", main="Breslow Estimate for Cumu Base Hazard")
model2$surv[6]^(exp(model1$coefficients))
model2$surv[6]^(exp(model1$coefficients))
exp(model1$coefficients)
model2$surv[6]^(exp(as.numeric(model1$coefficients)))
survreg(Surv(age,death)~gender,dist="weibull")
summary(survreg(Surv(age,death)~gender,dist="weibull"))
summary(survreg(Surv(age,death)~gender,dist="extreme"))
model2$surv[6]^(exp(as.numeric(model1$coefficients)))
summary(survreg(Surv(age,death)~gender,dist="extreme"))
summary(survreg(Surv(age,death)~gender,dist="weibull"))
log(79)
log(79.791)
log(79.792)
model.aft <- survreg(Surv(age,death)~gender,dist="weibull")
summary(model.aft)
model.aft$coefficients
model.aft$coefficients[1]
exp(model.aft$coefficients[1])
psi.hat = (log(75)-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
psi.hat
model.aft <- survreg(Surv(age,death)~gender,dist="weibull")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
as.numeric(psi.hat)
model.aft
model.aft <- survreg(Surv(age,death)~gender,dist="weibull")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
as.numeric(psi.hat)
model2<- survfit(model1,type="breslow")
plot(model2$time, -log(model2$surv),type="s", main="Breslow Estimate for Cumu Base Hazard")
nidek2
model2
summary(model2)
summary(model1)
plot(model1$surv)
plot(model2$surv))
plot(model2$surv)
model2$surv
model.aft$surv
survfit(Surv(age,death)~gender)
survfit(Surv(age,death)~1)
survfit(Surv(age,death)~gender)$surv
survfit(Surv(age,death)~gender)$surv
survfit(Surv(age,death)~1)
survfit(Surv(age,death)~1)$surv
model2<- survfit(model1,type="breslow")
plot(model2$time, -log(model2$surv),type="s", main="Breslow Estimate for Cumu Base Hazard")
exp(c(model1$coefficients-qnorm(0.975)*sqrt(model1$var),model1$coefficients+qnorm(0.975)*sqrt(model1$var)))
model2$surv[6]^(exp(as.numeric(model1$coefficients)))
model2$surv[5]
model2$surv[5]^2.7
model1 <-coxph(Surv(age,death)~strata(gender))
model1
summary(model1)
model1
model1 <-coxph(Surv(age,death)~gender)
model1
exp(c(model1$coefficients-qnorm(0.975)*sqrt(model1$var),model1$coefficients+qnorm(0.975)*sqrt(model1$var)))
exp(c(model1$coefficients-qnorm(0.975)*sqrt(model1$var),model1$coefficients+qnorm(0.975)*sqrt(model1$var)))
summary(model1)
summary(model2)
model2<- survfit(model1,type="breslow")
library(survival)
age <- c(60,72,81,72,79,75,68,73,77,65)
death <- c(1,1,0,1,0,1,1,1,0,1)
gender <- c(1,0,0,1,1,0,1,0,0,1)
data <- data.frame(subject=1:10, age = age, death = death, gender =gender)
model1 <-coxph(Surv(age,death)~gender)
model1
model2<- survfit(model1,type="breslow")
plot(model2$time, -log(model2$surv),type="s", main="Breslow Estimate for Cumu Base Hazard")
exp(c(model1$coefficients-qnorm(0.975)*sqrt(model1$var),model1$coefficients+qnorm(0.975)*sqrt(model1$var)))
summary(model2)
summary(model1)
exp(c(model1$coefficients-qnorm(0.975)*sqrt(model1$var),model1$coefficients+qnorm(0.975)*sqrt(model1$var)))
summary(model1)
names(model1)
names(summary(model1))
names(summary(model1))$conf.int
summary(model1)$conf.int
summary(model1)$conf.int[3:4]
library(survival)
age <- c(60,72,81,72,79,75,68,73,77,65)
death <- c(1,1,0,1,0,1,1,1,0,1)
gender <- c(1,0,0,1,1,0,1,0,0,1)
data <- data.frame(subject=1:10, age = age, death = death, gender =gender)
model1 <-coxph(Surv(age,death)~gender)
model1
summary(model1)
kable(data.frame("t"=model2$time,"S(t)"=-log(model2$surv)))
library(kable)
library(survival)
library(kable)
library(survival)
library(tidyverse)
library(e1071)
library(GGally)
library(kableExtra)
kable(data.frame("t"=model2$time,"S(t)"=-log(model2$surv)))
kable(data.frame("t"=model2$time,"S\(t\)"=-log(model2$surv)))
kable(data.frame("t"=model2$time,"Ht.hat"=-log(model2$surv)))
kable(data.frame("[t"=model2$time,"Ht.hat"=-log(model2$surv)))
kable(data.frame("\\\\[t"=model2$time,"Ht.hat"=-log(model2$surv)))
kable(data.frame("$\\[t"=model2$time,"Ht.hat"=-log(model2$surv)))
kable(data.frame("$t_4$"=model2$time,"Ht.hat"=-log(model2$surv)))
kable(data.frame("$\\t_4"=model2$time,"Ht.hat"=-log(model2$surv)))
kable(data.frame("$\\t_4"=model2$time,"Ht.hat"=-log(model2$surv)),escape = F)
kable(data.frame("$\\\\t_4"=model2$time,"Ht.hat"=-log(model2$surv)),escape = F)
kable(data.frame("$\\\\t_4$"=model2$time,"Ht.hat"=-log(model2$surv)),escape = F)
kable(data.frame("$t_4$"=model2$time,"Ht.hat"=-log(model2$surv)),escape = F)
kable(data.frame("$t_4$"=model2$time,"Ht.hat"=-log(model2$surv)),"latex",escape = F)
kable(data.frame("$t_4$"=model2$time,"Ht.hat"=-log(model2$surv)),"latex",escape = F)
kable(data.frame("$t_4$"=model2$time,"Ht.hat"=-log(model2$surv)),"latex",escape = F)
library(kableExtra)
kable(data.frame("$t"=model2$time,"Ht.hat"=-log(model2$surv)),escape=F)
library(kableExtra)
kable(data.frame("$t"=model2$time,"Ht.hat"=-log(model2$surv)),escape=F)
library(kableExtra)
kable(data.frame("$t_4$"=model2$time,"Ht.hat"=-log(model2$surv)),escape=F)
tablee <- data.frame(t=model2$time,"Ht.hat"=-log(model2$surv))
tablee
library(kableExtra)
tablee <- data.frame(t=model2$time,"Ht.hat"=-log(model2$surv))
names(tablee)[1]="$\[t,\)$"
library(kableExtra)
tablee <- data.frame(t=model2$time,"Ht.hat"=-log(model2$surv))
names(tablee)[1]="$\left[t,\right)$"
library(kableExtra)
options(knitr.table.format = "latex")
tablee <- data.frame(t=model2$time,"Ht.hat"=-log(model2$surv))
names(tablee)[1]="$\left[t,\right)$"
library(kableExtra)
options(knitr.table.format = "latex")
tablee <- data.frame(t=model2$time,"Ht.hat"=-log(model2$surv))
names(tablee)[1]="$x^2$"
kable(tablee,escape=F)
library(kableExtra)
options(knitr.table.format = "latex")
tablee <- data.frame(t=model2$time,"Ht.hat"=-log(model2$surv))
names(tablee)[1]="$[t,)$"
names(tablee)[2]=c("$\hat.H_0(t)$")
summary(model2)
model2
summary(model1)
model2$surv[6]
model.aft <- survreg(Surv(age,death)~gender,dist="weibull")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
as.numeric(psi.hat)
model.aft <- survreg(Surv(age,death)~gender,dist="weibull")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
as.numeric(psi.hat)
model2$surv[6]
model.aft <- survreg(Surv(age,death)~gender,dist="extreme")
summary(model.aft)
model.aft <- survreg(Surv(age,death)~gender,dist="extreme")
summary(model.aft)
psi.hat = (75-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
as.numeric(psi.hat)
model.aft <- survreg(Surv(age,death)~gender,dist="extreme")
summary(model.aft)
psi.hat = (75-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
as.numeric(psi.hat)
model.aft <- survreg(Surv(age,death)~gender,dist="extreme")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
as.numeric(psi.hat)
model.aft <- survreg(Surv(age,death)~gender,dist="weibull")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
as.numeric(psi.hat)
model.aft <- survreg(Surv(age,death)~gender,dist="weibull")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
as.numeric(psi.hat)
model.aft <- survreg(Surv(age,death)~gender,dist="weibull")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
as.numeric(psi.hat)
model1 <-coxph(Surv(age,death)~strata(gender))
model1
model2<- survfit(model1,type="breslow")
model2<- survfit(model1,type="breslow")
model2
model2$surv
plot(model2$time,model2$surv)
plot(model2$time,model2$surv,type=S)
plot(model2$time,model2$surv,type="s")
summary(model.aft)
model.aft <- survreg(Surv(age,death)~1,dist="weibull")
summary(model.aft)
model.aft$coefficients[1]
psi.hat = (log(75)-model.aft$coefficients[1])/model.aft$scale
as.numeric(psi.hat)
log(75)
summary(model.aft)
gender
gender
model.aft <- survreg(Surv(age,death)~gender,dist="weibull")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
as.numeric(psi.hat)
model.aft <- survreg(Surv(age,death)~1,dist="weibull")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1])/model.aft$scale
as.numeric(psi.hat)
age <- c(60,72,81,72,79,75,68,73,77,65)
death <- c(1,1,0,1,0,1,1,1,0,1)
gender <- c(1,0,0,1,1,0,1,0,0,1)
data <- data.frame(subject=1:10, age = age, death = death, gender =gender)
model1 <-coxph(Surv(age,death)~gender)
model1
model2<- survfit(model1,type="breslow")
model.aft <- survreg(Surv(age,death)~1,dist="weibull")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1])/model.aft$scale
as.numeric(psi.hat)
model.aft <- survreg(Surv(age,death)~gender,dist="weibull")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1]-model$aft$coefficients[2])/model.aft$scale
model.aft <- survreg(Surv(age,death)~gender,dist="weibull")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
as.numeric(psi.hat)
age <- c(60,72,81,72,79,75,68,73,77,65)
death <- c(1,1,0,1,0,1,1,1,0,1)
gender <- c(1,0,0,1,1,0,1,0,0,1)
data <- data.frame(subject=1:10, age = age, death = death, gender =gender)
model1 <-coxph(Surv(age,death)~gender)
model1
names(model1)
names(summary(model1))
1.0538/0.7839
qnorm(1.0538/0.7839)
pnorm(1.0538/0.7839)
1-pnorm(1.0538/0.7839)
qnorm(1.0538/0.7839)
pnorm(1.344)
model.aft <- survreg(Surv(age,death)~gender,dist="weibull")
summary(model.aft)
psi.hat = (log(75)-model.aft$coefficients[1]-model.aft$coefficients[2])/model.aft$scale
as.numeric(psi.hat)
s75 <-model2$surv[6]
s75
library(survival)
library(tidyverse)
library(e1071)
library(GGally)
library(kableExtra)
age <- c(60,72,81,72,79,75,68,73,77,65)
death <- c(1,1,0,1,0,1,1,1,0,1)
gender <- c(1,0,0,1,1,0,1,0,0,1)
data <- data.frame(subject=1:10, age = age, death = death, gender =gender)
model1 <-coxph(Surv(age,death)~gender)
model1
model2<- survfit(model1,type="breslow")
plot(model2$time, -log(model2$surv),type="s", main="Breslow Estimate for Cumu Base Hazard")
library(kableExtra)
options(knitr.table.format = "latex")
tablee <- data.frame(t=model2$time,"Ht.hat"=-log(model2$surv))
names(tablee)[1]="$[t,)$"
names(tablee)[2]="$hat.H_0(t)$"
kable(tablee,escape=F,position="center")
exp(c(model1$coefficients-qnorm(0.975)*sqrt(model1$var),model1$coefficients+qnorm(0.975)*sqrt(model1$var)))
#OR
#summary(model1)$conf.int[3:4]
s75 <-model2$surv[6]
s75
age <- c(60,72,81,72,79,75,68,73,77,65)
death <- c(1,1,0,1,0,1,1,1,0,1)
gender <- c(1,0,0,1,1,0,1,0,0,1)
data <- data.frame(subject=1:10, age = age, death = death, gender =gender)
model1 <-coxph(Surv(age,death)~gender)
model1
model2<- survfit(model1,type="breslow")
plot(model2$time, -log(model2$surv),type="s", main="Breslow Estimate for Cumu Base Hazard")
s75 <-model2$surv[6]
s75
model2$surv
model1$coefficients
/41^3
.41^3
library(survival)
colon
data <- colon[seq(2,1858,2),]
data
help(colon)
data
data
colon
data
data <- data[,-c(2)]
data
data <- data[,-c(2)]
model1 <- survfit(Surv(data$time,data$status)~data$node4)
plot(model1)
plot(model1$surv,log(model1$time))
plot(log(-log(model1$surv)),log(model1$time))
plot(log(-log(model1$surv))~log(model1$time))
model1 <- survfit(Surv(data$time,data$status)~data$obstruct)
plot(log(-log(model1$surv))~log(model1$time))
model1 <- survfit(Surv(data$time,data$status)~data$perfor)
plot(log(-log(model1$surv))~log(model1$time))
model1 <- survfit(Surv(data$time,data$status)~data$adhere)
plot(log(-log(model1$surv))~log(model1$time))
model1 <- survfit(Surv(data$time,data$status)~data$nodes)
plot(log(-log(model1$surv))~log(model1$time))
model1 <- survfit(Surv(data$time,data$status)~data$differ)
plot(log(-log(model1$surv))~log(model1$time))
model1 <- survfit(Surv(data$time,data$status)~data$extent)
plot(log(-log(model1$surv))~log(model1$time))
model1 <- survfit(Surv(data$time,data$status)~data$surg)
plot(log(-log(model1$surv))~log(model1$time))
model1 <- survfit(Surv(data$time,data$status)~1)
plot(log(-log(model1$surv))~log(model1$time))
help(boxcox)
library(MASS)
aa=lm(speed~dist,data=cars)
aa
boxcox(aa)
help("boxcox")
boxcox(aa)$lambda
names(boxcox(aa))
attributes(boxcox(aa))
help(boxcox)
boxcox(aa)
boxcox(aa)$x
plot(aa)
aa
boxcox(aa)$x
aa=lm(speed^1.25~dist,data=cars)
plot(aa)
aa=lm(speed^1.25~dist,data=cars)
aa=lm(speed^~dist,data=cars)
aa=lm(speed~dist,data=cars)
library(MASS)
boxcox(aa)
help(boxcox)
boxcox(aa,lambda=seq(10,15,0.1))
library(MASS)
boxcox(aa)
help(boxcox)
0.99*20
0.99^20
library(tidyjson)
library(tidyverse)
library(ggplot2)
setwd("C:/Users/Daniel/OneDrive - The University of Western Ontario/Projects/Spotify Top Songs 2019")
#Turn JSON into dataframe
#Audio Features of canada top 100 songs
canada100 <- as.data.frame(read_json("canadaTop100Features.json") %>%
enter_object("audio_features") %>%
gather_array %>%
spread_all)
#Removing irrelevant columns
#document.id, type, id, track_href, analysis_url
canada100 <- canada100[,-c(1,14,15,17,18)]
#Audio Features of my top 100 songs
my100 <- as.data.frame(read_json("MyTop100Features.json") %>%
enter_object("audio_features") %>%
gather_array %>%
spread_all)
#Removing irrelevant columns
#document.id, type, id, track_href, analysis_url
my100 <- my100[,-c(1,14,15,17,18)]
#Information about canada top 100 songs (minus artists, since artist name is nested deeper
#in the JSON file
canada100_info <- as.data.frame(read_json("canadaTop100Info.json") %>%
enter_object("tracks") %>%
gather_array %>%
spread_all)
my100_info <- as.data.frame(read_json("MyTop100Info.json") %>%
enter_object("tracks") %>%
gather_array %>%
spread_all)
#extracting artist names associated with canada/my 100 songs
#Note: Some songs have multiple artists, so this can't be
#added directly to a data frame since rows > 100
canada100_artists <- as.data.frame(read_json("canadaTop100Info.json") %>%
enter_object("tracks") %>%
gather_array(column.name = "rank") %>% #this column preserves which of the 100 songs these 158 artists are associated with
enter_object("artists") %>%
gather_array %>%
spread_all)
canada100_artists <- canada100_artists[,c(2,6,8)]
my100_artists <- as.data.frame(read_json("MyTop100Info.json") %>%
enter_object("tracks") %>%
gather_array(column.name = "rank") %>%
enter_object("artists") %>%
gather_array %>%
spread_all)
my100_artists <- my100_artists[,c(2,6,8)]
#adding song names to my top 100 and canada 100
my100 <- cbind(my100,my100_info[,c(5,9,10,12,13,15,18:21,23)])
canada100 <- cbind(canada100,canada100_info[,c(5,9,10,12,13,15,18:21,23)])
ggplot() +
geom_bar(data=canada100, aes(x = popularity, y = ..count..,fill="black"), alpha = 0.8) +
geom_bar(data=my100, aes(x = popularity, y = ..count.., fill="#1ed761"), alpha=0.8) +
labs(title = "Popularity of My Top 100 vs canada Top 100 Spotify Songs", y = "# of Songs") +
scale_fill_identity(name = 'Songs', guide = 'legend',labels = c('My 100',"Canada's 100"))
#Formatting release dates into year-month
myyear_month <- format(as.Date(my100$album.release_date),format="%Y-%m")
myyear_month <- paste0(myyear_month,"-1")
myyear_month <- as.Date(myyear_month, format="%Y-%m-%d")
canadayear_month <- format(as.Date(canada100[-96,]$album.release_date),format="%Y-%m") #96 = bohemian rhapsody, released in 1975
canadayear_month <- paste0(canadayear_month,"-1")
canadayear_month <- as.Date(canadayear_month, format="%Y-%m-%d")
ggplot(my100, aes(myyear_month)) +
geom_bar(fill="#1ed761",col="black") + scale_x_date(date_breaks="3 months", date_labels = "%b %Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(breaks=seq(0,9,1))
ggplot(canada100[-96,], aes(canadayear_month)) +
geom_bar(fill="#1ed761",col="black") + scale_x_date(date_breaks="3 months", date_labels = "%b %Y") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(breaks=seq(0,14,1))
#OVERLAY THESE 2 PLOTS ^^^ ???
(my100_artists %>% group_by(name) %>% count(sort=T)%>% print(n=1000))[1:10,]
(canada100_artists %>% group_by(name) %>% count(sort=T)%>% print(n=1000))[1:10,]
intersect(my100$uri,canada100$uri)
intersect(my100$name,canada100$name)
ggplot()+geom_ribbon(data=ribbon,aes(ymin=min,ymax=max,x=x.ribbon,fill='lightgreen'))+
geom_line(data=ribbon,aes(x=x.ribbon,y=avg,color='black'))+
geom_line(data=data,aes(x=x,y=new.data,color='red'))+
xlab('x')+ylab('density') +
scale_fill_identity(name = 'the fill', guide = 'legend',labels = c('m1')) +
scale_colour_manual(name = 'the colour',
values =c('black'='black','red'='red'), labels = c('c2','c1'))
canada100 %>% select(name, album.release_date) %>% arrange(desc(album.release_date))
my100 %>% select(name, album.release_date) %>% arrange(desc(album.release_date))
#unlimited release dates
ggplot() +
geom_bar(data=canada100[-96,], aes(canadayear_month,fill="black"), color = "black", alpha = 0.6)+
geom_bar(data=my100, aes(myyear_month,fill="#1ed761"), color = "black", alpha = 0.6)+
scale_x_date(date_breaks="3 months", date_labels = "%b %Y") +
scale_y_continuous(breaks=seq(0,14,1)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
labs(title = "Release Date of My Top 100 vs canada Top 100 Spotify Songs", y = "# of Songs") +
scale_fill_identity(name = 'Songs', guide = 'legend',labels = c('My 100',"Canada's 100"))
#2016+ release dates
ggplot() +
geom_bar(data=canada100[-96,], aes(canadayear_month,fill="black"), color = "black", alpha = 0.6)+
geom_bar(data=my100, aes(myyear_month,fill="#1ed761"), color = "black", alpha = 0.6)+
scale_x_date(date_breaks="3 months", date_labels = "%b %Y") +
xlim(as.Date(c('1/1/2016', '1/1/2020'), format="%d/%m/%Y") )+
scale_y_continuous(breaks=seq(0,14,1)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
labs(title = "Release Date of My Top 100 vs canada Top 100 Spotify Songs", y = "# of Songs") +
scale_fill_identity(name = 'Songs', guide = 'legend',labels = c('My 100',"Canada's 100"))
